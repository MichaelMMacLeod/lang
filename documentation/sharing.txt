In a computation in the environment with the following rules:

  (for 0 -> 0)
  (for n (S n) -> (S n))
  (for n (n + 0) -> n)
  (for n m (n + (S m)) -> ((S n) + m))
  (for 2 -> (S (S 0)))
  (for n (n * 2) -> (n + n))

If the input is ((2 * 2) * 2), then with sharing we reduce in 11
steps:

running 1 test
0.      ((2 * 2) * 2)
1.      ((2 * 2) + (2 * 2))
2.      ((2 + 2) + (2 + 2))
3.      (((S (S 0)) + (S (S 0))) + ((S (S 0)) + (S (S 0))))
4.      (((S (S (S 0))) + (S 0)) + ((S (S (S 0))) + (S 0)))
5.      (((S (S (S (S 0)))) + 0) + ((S (S (S (S 0)))) + 0))
6.      ((S (S (S (S 0)))) + (S (S (S (S 0)))))
7.      ((S (S (S (S (S 0))))) + (S (S (S 0))))
8.      ((S (S (S (S (S (S 0)))))) + (S (S 0)))
9.      ((S (S (S (S (S (S (S 0))))))) + (S 0))
10.     ((S (S (S (S (S (S (S (S 0)))))))) + 0)
11.     (S (S (S (S (S (S (S (S 0))))))))

And without sharing we reduce in 18 steps:

running 1 test
0.      ((2 * 2) * 2)
1.      ((2 * 2) + (2 * 2))
2.      ((2 + 2) + (2 * 2))
3.      (((S (S 0)) + 2) + (2 * 2))
4.      (((S (S 0)) + (S (S 0))) + (2 * 2))
5.      (((S (S (S 0))) + (S 0)) + (2 * 2))
6.      (((S (S (S (S 0)))) + 0) + (2 * 2))
7.      ((S (S (S (S 0)))) + (2 * 2))
8.      ((S (S (S (S 0)))) + (2 + 2))
9.      ((S (S (S (S 0)))) + ((S (S 0)) + 2))
10.     ((S (S (S (S 0)))) + ((S (S 0)) + (S (S 0))))
11.     ((S (S (S (S 0)))) + ((S (S (S 0))) + (S 0)))
12.     ((S (S (S (S 0)))) + ((S (S (S (S 0)))) + 0))
13.     ((S (S (S (S 0)))) + (S (S (S (S 0)))))
14.     ((S (S (S (S (S 0))))) + (S (S (S 0))))
15.     ((S (S (S (S (S (S 0)))))) + (S (S 0)))
16.     ((S (S (S (S (S (S (S 0))))))) + (S 0))
17.     ((S (S (S (S (S (S (S (S 0)))))))) + 0)
18.     (S (S (S (S (S (S (S (S 0))))))))
